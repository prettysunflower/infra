apiVersion: apps/v1
kind: Deployment
metadata:
  name: ourfigurecollection
  namespace: ourfigurecollection
  labels:
    app.kubernetes.io/name: ourfigurecollection
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ourfigurecollection
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ourfigurecollection
    spec:
      containers:
        - name: ourfigurecollection-django
          image: "git.prettysunflower.moe/prettysunflower/ourfigurecollection:main"
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
              name: http
          envFrom:
            - secretRef:
                name: ourfigurecollection-secrets
            - configMapRef:
                name: ourfigurecollection-config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 30
            periodSeconds: 10
        - name: ourfigurecollection-static
          image: "git.prettysunflower.moe/prettysunflower/ourfigurecollection-static:main"
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
              name: static
          livenessProbe:
            httpGet:
              path: /styles/style.css
              port: static
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /styles/style.css
              port: static
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /styles/style.css
              port: static
            failureThreshold: 30
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: ourfigurecollection-config
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkey
  namespace: ourfigurecollection
  labels:
    app.kubernetes.io/name: valkey
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: valkey
  template:
    metadata:
      labels:
        app.kubernetes.io/name: valkey
    spec:
      volumes:
        - name: valkey
          emptyDir:
            sizeLimit: 256Mi
            medium: Memory
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
      containers:
        - image: valkey/valkey:alpine
          name: valkey
          command: ["valkey-server"]
          ports:
            - containerPort: 6379
              protocol: TCP
              name: valkey
          env:
            - name: VALKEY_EXTRA_FLAGS
              value: "--save 60 1"
          volumeMounts:
            - name: valkey
              mountPath: "/data"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ourfigurecollection
  namespace: anubis
  labels:
    app.kubernetes.io/name: anubis-ourfigurecollection
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: anubis-ourfigurecollection
  template:
    metadata:
      labels:
        app.kubernetes.io/name: anubis-ourfigurecollection
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
      volumes:
        - name: config
          configMap:
            name: ourfigurecollection-anubis-config
      containers:
        - name: anubis
          image: ghcr.io/techarohq/anubis:v1.22.0
          envFrom:
            - secretRef:
                name: thoth
            - secretRef:
                name: ourfigurecollection
          volumeMounts:
            - name: config
              mountPath: /data/cfg/botPolicy.yaml
              subPath: anubis-config.yaml
          env:
            - name: BIND
              value: ":8923"
            - name: METRICS_BIND
              value: ":9090"
            - name: TARGET
              value: "http://ourfigurecollection.ourfigurecollection.svc.seija.prettysunflower.moe"
            - name: WEBMASTER_EMAIL
              value: "me@prettysunflower.moe"
          ports:
            - containerPort: 8923
              protocol: TCP
              name: http
            - containerPort: 9090
              protocol: TCP
              name: metrics
          resources:
            limits:
              cpu: 750m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 1
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 20
