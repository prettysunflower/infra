apiVersion: apps/v1
kind: Deployment
metadata:
  name: kakigoori
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: kakigoori
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: kakigoori
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kakigoori
    spec:
      containers:
        - name: kakigoori
          image: "git.prettysunflower.moe/prettysunflower/kakigoori:2.0.0"
          ports:
            - containerPort: 8001
              name: http
          envFrom:
            - secretRef:
                name: kakigoori-config
          env:
            - name: KUBERNETES_POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #  initialDelaySeconds: 30
          #  periodSeconds: 30
          #  failureThreshold: 3
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #  initialDelaySeconds: 30
          #  periodSeconds: 30
          #  failureThreshold: 3
          #startupProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #  failureThreshold: 30
          #  periodSeconds: 10
          resources:
            limits:
              cpu: 2
              memory: 2048Mi
            requests:
              cpu: 500m
              memory: 512Mi
        - name: kakigoori-static
          image: "git.prettysunflower.moe/prettysunflower/kakigoori-static:2.0.0"
          ports:
            - containerPort: 8002
              name: static
          livenessProbe:
            httpGet:
              path: /css/index.css
              port: static
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /css/index.css
              port: static
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /css/index.css
              port: static
            failureThreshold: 30
            periodSeconds: 2
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: kakigoori-config
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
      containers:
        - image: rabbitmq:4.1.4
          name: rabbitmq
          ports:
            - containerPort: 5672
              protocol: TCP
              name: rabbitmq
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkey
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: valkey
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: valkey
  template:
    metadata:
      labels:
        app.kubernetes.io/name: valkey
    spec:
      volumes:
        - name: valkey
          emptyDir:
            sizeLimit: 256Mi
            medium: Memory
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
      containers:
        - image: valkey/valkey:alpine
          name: valkey
          command: ["valkey-server"]
          ports:
            - containerPort: 6379
              protocol: TCP
              name: valkey
          env:
            - name: VALKEY_EXTRA_FLAGS
              value: "--save 60 1"
          volumeMounts:
            - name: valkey
              mountPath: "/data"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-results-processing
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: worker-results-processing
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: worker-results-processing
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker-results-processing
    spec:
      containers:
        - name: kakigoori
          image: git.prettysunflower.moe/prettysunflower/kakigoori:main@sha256:55083457154550690251007ac99e525432ce58ca793e66c2d87b22138508725e
          envFrom:
            - secretRef:
                name: kakigoori-config
          command: ["uv"]
          args: ["run", "manage.py", "worker_results_processing"]
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: avif-image-worker
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: avif-image-worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: avif-image-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: avif-image-worker
    spec:
      containers:
        - image: git.prettysunflower.moe/prettysunflower/kakigoori-worker@sha256:19088d99351c6d5be294fe2c6fcfeef6a1e09e556f700cbf948d9e7986022c57
          name: kakigoori-worker
          envFrom:
            - secretRef:
                name: kakigoori-config
          env:
            - name: WORKER_FILE_TYPES
              value: "avif"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 2
            requests:
              cpu: 250m
              memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webp-image-worker
  namespace: kakigoori
  labels:
    app.kubernetes.io/name: webp-image-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: webp-image-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webp-image-worker
    spec:
      containers:
        - image: git.prettysunflower.moe/prettysunflower/kakigoori-worker@sha256:19088d99351c6d5be294fe2c6fcfeef6a1e09e556f700cbf948d9e7986022c57
          name: kakigoori-worker
          envFrom:
            - secretRef:
                name: kakigoori-config
          env:
            - name: WORKER_FILE_TYPES
              value: "webp"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 2
            requests:
              cpu: 250m
              memory: 512Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kakigoori
  namespace: anubis
  labels:
    app.kubernetes.io/name: anubis-kakigoori
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: anubis-kakigoori
  template:
    metadata:
      labels:
        app.kubernetes.io/name: anubis-kakigoori
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 100.94.59.38
      volumes:
        - name: config
          configMap:
            name: kakigoori-anubis-config
      containers:
        - name: anubis
          image: ghcr.io/techarohq/anubis:v1.22.0
          envFrom:
            - secretRef:
                name: thoth
            - secretRef:
                name: kakigoori
          volumeMounts:
            - name: config
              mountPath: /data/cfg/botPolicy.yaml
              subPath: anubis-config.yaml
          env:
            - name: BIND
              value: ":8923"
            - name: METRICS_BIND
              value: ":9090"
            - name: TARGET
              value: "http://kakigoori.kakigoori.svc.yuiman.prettysunflower.moe"
            - name: WEBMASTER_EMAIL
              value: "me@prettysunflower.moe"
          ports:
            - containerPort: 8923
              protocol: TCP
              name: http
            - containerPort: 9090
              protocol: TCP
              name: metrics
          resources:
            limits:
              cpu: 750m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 1
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 20
